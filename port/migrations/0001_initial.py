# Generated by Django 2.1.8 on 2019-06-13 12:44

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('event_id', models.AutoField(primary_key=True, serialize=False)),
                ('event_name', models.CharField(max_length=20)),
                ('event_detail', models.CharField(max_length=255)),
                ('event_applicant', models.CharField(max_length=10)),
                ('applicant_tel', models.CharField(max_length=12)),
                ('event_addr', models.CharField(max_length=50)),
                ('event_start_time', models.DateTimeField(auto_now_add=True)),
                ('event_end_time', models.DateTimeField(null=True)),
                ('is_deal', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'tb_event',
            },
        ),
        migrations.CreateModel(
            name='EventType',
            fields=[
                ('type_id', models.AutoField(primary_key=True, serialize=False)),
                ('type_name', models.CharField(max_length=20)),
                ('type_score', models.IntegerField()),
            ],
            options={
                'db_table': 'tb_event_type',
            },
        ),
        migrations.CreateModel(
            name='Leave',
            fields=[
                ('leave_id', models.AutoField(primary_key=True, serialize=False)),
                ('leave_time', models.DateField()),
                ('leave_reason', models.CharField(max_length=255)),
                ('is_permit', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'tb_leave',
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('role_id', models.AutoField(primary_key=True, serialize=False)),
                ('rolename', models.CharField(max_length=20, unique=True)),
            ],
            options={
                'db_table': 'tb_role',
            },
        ),
        migrations.CreateModel(
            name='Scheduling',
            fields=[
                ('scheduling_id', models.AutoField(primary_key=True, serialize=False)),
                ('scheduling_name', models.CharField(max_length=20, unique=True)),
                ('scheduling_time', models.CharField(max_length=10, unique=True)),
            ],
            options={
                'db_table': 'tb_scheduling',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('user_id', models.AutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=20, unique=True)),
                ('account', models.CharField(max_length=20, unique=True)),
                ('password', models.CharField(max_length=255)),
                ('score', models.IntegerField(default=0)),
            ],
            options={
                'db_table': 'tb_user',
            },
        ),
        migrations.CreateModel(
            name='UserRole',
            fields=[
                ('ur_id', models.AutoField(primary_key=True, serialize=False)),
                ('role', models.ForeignKey(db_column='role_id', on_delete=django.db.models.deletion.PROTECT, to='port.Role')),
                ('user', models.ForeignKey(db_column='user_id', on_delete=django.db.models.deletion.PROTECT, to='port.User')),
            ],
            options={
                'db_table': 'tb_user_role',
            },
        ),
        migrations.CreateModel(
            name='UserScheduling',
            fields=[
                ('us_id', models.AutoField(primary_key=True, serialize=False)),
                ('is_on', models.BooleanField(default=False)),
                ('scheduling', models.ForeignKey(db_column='scheduling_id', on_delete=django.db.models.deletion.PROTECT, to='port.Scheduling')),
                ('user', models.ForeignKey(db_column='user_id', on_delete=django.db.models.deletion.PROTECT, to='port.User')),
            ],
            options={
                'db_table': 'tb_user_scheduling',
            },
        ),
        migrations.AddField(
            model_name='user',
            name='roles',
            field=models.ManyToManyField(through='port.UserRole', to='port.Role'),
        ),
        migrations.AddField(
            model_name='user',
            name='scheduling',
            field=models.ManyToManyField(through='port.UserScheduling', to='port.Scheduling'),
        ),
        migrations.AddField(
            model_name='leave',
            name='leave_user',
            field=models.ForeignKey(db_column='user_id', on_delete=django.db.models.deletion.PROTECT, to='port.User'),
        ),
        migrations.AddField(
            model_name='event',
            name='event_adder',
            field=models.ForeignKey(db_column='adder_user_id', on_delete=django.db.models.deletion.PROTECT, related_name='adder_user', to='port.User'),
        ),
        migrations.AddField(
            model_name='event',
            name='event_auxiliary_deal',
            field=models.ForeignKey(db_column='auxiliary_deal_user_id', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='auxiliary_deal', to='port.User'),
        ),
        migrations.AddField(
            model_name='event',
            name='event_main_deal',
            field=models.ForeignKey(db_column='main_deal_user_id', on_delete=django.db.models.deletion.PROTECT, related_name='main_deal', to='port.User'),
        ),
        migrations.AddField(
            model_name='event',
            name='event_solve',
            field=models.ForeignKey(db_column='solver_user_id', on_delete=django.db.models.deletion.PROTECT, related_name='solver_user', to='port.User'),
        ),
        migrations.AddField(
            model_name='event',
            name='event_type',
            field=models.ForeignKey(db_column='type_id', on_delete=django.db.models.deletion.PROTECT, to='port.EventType'),
        ),
        migrations.AlterUniqueTogether(
            name='userscheduling',
            unique_together={('user', 'scheduling')},
        ),
        migrations.AlterUniqueTogether(
            name='userrole',
            unique_together={('user', 'role')},
        ),
    ]
